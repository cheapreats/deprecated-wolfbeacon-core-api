{"version":3,"sources":["../../services/hackathon-service.js"],"names":["HackathonService","createHackathon","hackathonId","hackathonUuid","hackathonData","hackathon","_id","uuid","data","save","err","console","log","addUserToHackathonOrganisers","userId","findByIdAndUpdate","$addToSet","organisers","safe","upsert","addUserToHackathonVolunteers","$push","volunteers","addUserToHackathonParticipants","participants","addUserToHackathonMentors","mentors"],"mappings":";;;;;;AAAA;;;;;;AAGA,IAAMA,mBAAmB;;AAErB;;;;AAIAC,mBANqB,2BAMLC,WANK,EAMQC,aANR,EAMuBC,aANvB,EAMsC;AACvD,YAAIC,YAAY,6BAAc;AAC1BC,iBAAKJ,WADqB;AAE1BK,kBAAMJ,aAFoB;AAG1BK,kBAAMJ;AAHoB,SAAd,CAAhB;AAKAC,kBAAUI,IAAV,CAAe,UAAUC,GAAV,EAAe;AAC1B,gBAAIA,GAAJ,EAAS;AACLC,wBAAQC,GAAR,CAAYF,GAAZ;AACH;AACJ,SAJD;AAKH,KAjBoB;;;AAmBrB;;;;AAKAG,gCAxBqB,wCAwBQC,MAxBR,EAwBgBZ,WAxBhB,EAwB6B;AAC9C,iCAAUa,iBAAV,CACIb,WADJ,EAEI,EAACc,WAAW,EAACC,YAAYH,MAAb,EAAZ,EAFJ,EAGI,EAACI,MAAM,IAAP,EAAaC,QAAQ,IAArB,EAHJ,EAII,UAAUT,GAAV,EAAe;AACX,gBAAIA,GAAJ,EAAS;AACLC,wBAAQC,GAAR,CAAYF,GAAZ;AACH;AACJ,SARL;AAUH,KAnCoB;AAqCrBU,gCArCqB,wCAqCQN,MArCR,EAqCgBZ,WArChB,EAqC6B;AAC9C,iCAAUa,iBAAV,CACIb,WADJ,EAEI,EAACmB,OAAO,EAACC,YAAYR,MAAb,EAAR,EAFJ,EAGI,EAACI,MAAM,IAAP,EAAaC,QAAQ,IAArB,EAHJ;AAKH,KA3CoB;AA6CrBI,kCA7CqB,0CA6CUT,MA7CV,EA6CkBZ,WA7ClB,EA6C+B;AAChD,iCAAUa,iBAAV,CACIb,WADJ,EAEI,EAACmB,OAAO,EAACG,cAAcV,MAAf,EAAR,EAFJ,EAGI,EAACI,MAAM,IAAP,EAAaC,QAAQ,IAArB,EAHJ;AAKH,KAnDoB;AAsDrBM,6BAtDqB,qCAsDKX,MAtDL,EAsDaZ,WAtDb,EAsD0B;AAC3C,iCAAUa,iBAAV,CACIb,WADJ,EAEI,EAACmB,OAAO,EAACK,SAASZ,MAAV,EAAR,EAFJ,EAGI,EAACI,MAAM,IAAP,EAAaC,QAAQ,IAArB,EAHJ;AAKH;AA5DoB,CAAzB;;kBA0EenB,gB","file":"hackathon-service.js","sourcesContent":["import Hackathon from '../models/hackathon-model';\n\n\nconst HackathonService = {\n\n    /**\n     * Creating a Hackathon Service\n     */\n\n    createHackathon(hackathonId, hackathonUuid, hackathonData) {\n        let hackathon = new Hackathon({\n            _id: hackathonId,\n            uuid: hackathonUuid,\n            data: hackathonData\n        });\n        hackathon.save(function (err) {\n            if (err) {\n                console.log(err);\n            }\n        });\n    },\n\n    /**\n     * Adding Users to Hackathons in different roles\n     */\n\n\n    addUserToHackathonOrganisers(userId, hackathonId) {\n        Hackathon.findByIdAndUpdate(\n            hackathonId,\n            {$addToSet: {organisers: userId}},\n            {safe: true, upsert: true},\n            function (err) {\n                if (err) {\n                    console.log(err);\n                }\n            }\n        );\n    },\n\n    addUserToHackathonVolunteers(userId, hackathonId) {\n        Hackathon.findByIdAndUpdate(\n            hackathonId,\n            {$push: {volunteers: userId}},\n            {safe: true, upsert: true}\n        );\n    },\n\n    addUserToHackathonParticipants(userId, hackathonId) {\n        Hackathon.findByIdAndUpdate(\n            hackathonId,\n            {$push: {participants: userId}},\n            {safe: true, upsert: true}\n        );\n    },\n\n\n    addUserToHackathonMentors(userId, hackathonId) {\n        Hackathon.findByIdAndUpdate(\n            hackathonId,\n            {$push: {mentors: userId}},\n            {safe: true, upsert: true}\n        );\n    },\n\n    /**\n     * Reading Hackathons from DB\n     */\n    //\n    // getHackathonDataAsOrganiser(userId, hackathonId) {\n    //     Hackathon.find(hackathonId, {organisers: {\"$in\": [userId]}}, function (err, docs) {\n    //         if ()\n    //     });\n    // }\n};\n\n\nexport default HackathonService;"]}