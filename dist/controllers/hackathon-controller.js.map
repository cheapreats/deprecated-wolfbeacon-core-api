{"version":3,"sources":["../../controllers/hackathon-controller.js"],"names":["createHackathonController","req","res","next","hackathonId","parseInt","body","id","hackathonUuid","uuid","hackathonData","data","userId","createHackathon","then","addedHackathon","console","log","createOrUpsertUser","addedUser","addUserToHackathonOrganisers","upsertedUser","makeUserHackathonOrganiser","user","json","status","message","catch","err","error","fetchHackathonDetailsController","query","fetchHackathonDetails"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;AAEA,SAASA,yBAAT,CAAmCC,GAAnC,EAAwCC,GAAxC,EAA6CC,IAA7C,EAAmD;AAC/C,QAAMC,cAAcC,SAASJ,IAAIK,IAAJ,CAASC,EAAlB,CAApB;AACA,QAAMC,gBAAgBP,IAAIK,IAAJ,CAASG,IAA/B;AACA,QAAMC,gBAAgBT,IAAIK,IAAJ,CAASK,IAA/B;AACA,QAAMC,SAASX,IAAIK,IAAJ,CAASM,MAAxB;;AAEA;AACA;AACA;AACA,+BAAiBC,eAAjB,CAAiCT,WAAjC,EAA8CI,aAA9C,EAA6DE,aAA7D,EACKI,IADL,CACU,UAACC,cAAD,EAAoB;AACtBC,gBAAQC,GAAR,0BAAmCF,cAAnC;AACA,8BAAYG,kBAAZ,CAA+BN,MAA/B,EACKE,IADL,CACU,UAACK,SAAD,EAAe;AACjBH,oBAAQC,GAAR,wBAAiCE,SAAjC;AACA,uCAAiBC,4BAAjB,CAA8CR,MAA9C,EAAsDR,WAAtD,EACKU,IADL,CACU,UAACO,YAAD,EAAkB;AACpBL,wBAAQC,GAAR,WAAoBI,YAApB,0CAAqEN,cAArE;AACA,sCAAYO,0BAAZ,CAAuCV,MAAvC,EAA+CR,WAA/C,EACKU,IADL,CACU,UAACS,IAAD,EAAU;AACZP,4BAAQC,GAAR,WAAoBI,YAApB,oCAA+DN,cAA/D;AACAb,wBAAIsB,IAAJ,CAAS;AACLC,gCAAQ,SADH;AAELC,qEAA2CtB,WAA3C,wBAAyEQ;AAFpE,qBAAT;AAIH,iBAPL;AAQH,aAXL;AAYH,SAfL;AAgBH,KAnBL,EAmBOe,KAnBP,CAmBa,UAACC,GAAD,EAAS;AAClBZ,gBAAQa,KAAR,CAAcD,GAAd;AACA1B,YAAIsB,IAAJ,CAAS,EAACC,QAAQ,OAAT,EAAkBC,SAAS,4BAA3B,EAAT;AACH,KAtBD;AAuBH;;AAED,SAASI,+BAAT,CAAyC7B,GAAzC,EAA8CC,GAA9C,EAAmD;AAC/C,QAAME,cAAcC,SAASJ,IAAI8B,KAAJ,CAAU3B,WAAnB,CAApB;AACA,+BAAiB4B,qBAAjB,CAAuC5B,WAAvC,EAAoDU,IAApD,CAAyD,UAACH,IAAD,EAAU;AAC/DT,YAAIsB,IAAJ,CAASb,KAAKA,IAAd;AACH,KAFD,EAEGgB,KAFH,CAES,UAACC,GAAD,EAAS;AACdZ,gBAAQC,GAAR,CAAYW,GAAZ;AACH,KAJD;AAMH;;kBAEc,EAAC5B,oDAAD,EAA4B8B,gEAA5B,E","file":"hackathon-controller.js","sourcesContent":["import HackathonService from '../services/hackathon-service';\nimport UserService from '../services/user-service'\n\nfunction createHackathonController(req, res, next) {\n    const hackathonId = parseInt(req.body.id);\n    const hackathonUuid = req.body.uuid;\n    const hackathonData = req.body.data;\n    const userId = req.body.userId;\n\n    //Not consistent if one of these operations fails. MongoDB and Mongoose smh...\n    //Tried enforcing promises to make flow better and ensure forward consistency atleast\n    //Kept the closure going, I could avoid promise nesting but wouldn't be able to log\n    HackathonService.createHackathon(hackathonId, hackathonUuid, hackathonData)\n        .then((addedHackathon) => {\n            console.log(`Hackathon added: \\n ${addedHackathon}`);\n            UserService.createOrUpsertUser(userId)\n                .then((addedUser) => {\n                    console.log(`User upserted: \\n ${addedUser}`);\n                    HackathonService.addUserToHackathonOrganisers(userId, hackathonId)\n                        .then((upsertedUser) => {\n                            console.log(`User ${upsertedUser} added as organisers to Hackathon ${addedHackathon}`);\n                            UserService.makeUserHackathonOrganiser(userId, hackathonId)\n                                .then((user) => {\n                                    console.log(`User ${upsertedUser} is organising of Hackathon ${addedHackathon}`);\n                                    res.json({\n                                        status: 'SUCCESS',\n                                        message: `Successfully created Hackathon ${hackathonId} linked to user ${userId}`\n                                    })\n                                });\n                        });\n                })\n        }).catch((err) => {\n        console.error(err);\n        res.json({status: 'ERROR', message: 'Unable to create hackathon'});\n    });\n}\n\nfunction fetchHackathonDetailsController(req, res) {\n    const hackathonId = parseInt(req.query.hackathonId);\n    HackathonService.fetchHackathonDetails(hackathonId).then((data) => {\n        res.json(data.data);\n    }).catch((err) => {\n        console.log(err);\n    });\n\n}\n\nexport default {createHackathonController, fetchHackathonDetailsController}"]}